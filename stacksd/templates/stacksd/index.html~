
{% extends 'base.html' %}
{% load i18n %}
{% block title %}{% trans "Stacks Designer" %}{% endblock %}

{% block page_header %}
  {% include "horizon/common/_page_header.html" with title=_("Stacks Designer") %}
{% endblock page_header %}

{% block main %}
    

<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" lang="en" xml:lang="en">
<head>
  <!--  <meta http-equiv="content-type" content="text/html; charset=utf-8" />
  <!-- <meta http-equiv="content-script-type" content="text/javascript" />
  <!--  <meta http-equiv="content-style-type" content="text/css" />

    <title>Drag Drop Demo</title>
    <meta name="description" content="Drag&Drop" />

  <!-- <script src="http://www.google.com/jsapi" type="text/javascript"></script>
	<script type="text/javascript">
	    google.load("jquery", "1.4.2");
		google.load("jqueryui", "1.7.2");
	</script>

	<link rel="stylesheet" type="text/css" href="style.css" media="all" />

	<script type="text/javascript">
 $(document).ready(function(){
        //Counter
        counter = 0;
        $('#images').hide();
        //Make element draggable
        $(".drag").draggable({

            helper:'clone',
            containment: 'frame',

            //When first dragged
            stop:function(ev, ui) {
            	$('#images').hide();
            	var pos=$(ui.helper).offset();
            	objName = "#clonediv"+counter
            	$(objName).css({"left":pos.left,"top":pos.top});
            	$(objName).removeClass("drag");


               	//When an existiung object is dragged
                $(objName).draggable({
                	containment: 'parent',
                    stop:function(ev, ui) {
                    	var pos=$(ui.helper).offset();
                    	console.log($(this).attr("id"));
						console.log(pos.left)
                        console.log(pos.top)
                    }
                });
            }
        });
        //Make element droppable
        $("#frame").droppable({
			drop: function(ev, ui) {
				if (ui.helper.attr('id').search(/drag[0-9]/) != -1){
					counter++;
					var element=$(ui.draggable).clone();
					element.addClass("tempclass");
					$(this).append(element);
					$(".tempclass").attr("id","clonediv"+counter);
					$("#clonediv"+counter).removeClass("tempclass");

					//Get the dynamically item id
					draggedNumber = ui.helper.attr('id').search(/drag([0-9])/)
					itemDragged = "dragged" + RegExp.$1
					alert(itemDragged)
		
					$("#clonediv"+counter).addClass(itemDragged);

					//for property window diaplay purpose
					switch(itemDragged)
					{

						case 'dragged1':
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected instance</p>');
						var instance1=new Instance();
						//instance1.formcreate();
						break;
						case 'dragged2':
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected Load Balancer</p>');
						break;
				 	 	case 'dragged3': 
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected stack</p>');
						break;
						default:
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected server</p>');
					}
					$("images").show();
					//$("form1").show();
					//In order to enable click to display properties respected to the
					// element we clicked
					$("#clonediv"+counter).click(function(){
					draggedNumber = ui.helper.attr('id').search(/drag([0-9])/)
					itemDragged = "dragged" + RegExp.$1
					switch(itemDragged)
					{

						case 'dragged1':
						//document.getElementById('properties').innerText +="You selected database with click";
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected database with click</p>');
						//$('#form1').show();
						instance1.formcreate();
						break;
						case 'dragged2':
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected Load Balancer with click</p>');
						break;
				 	 	case 'dragged3': 
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected stack with click</p>');
						$('#images').show();
						break;
						default:
						$('#propText').html('<p><b><i> Property Window </i></b><br>You selected server with click</p>');
						$('#images').show();

					}
					});
					
					
				}	
        	}
        });
    });
	function Instance(){
		this.instancename;
		this.keypair;
		this.type;
		this.flavour;
		//alert("woohoo!");

	}
	Instance.prototype.formcreate=function(){
	
		var div = document.getElementById('properties');
		var form = document.createElement('form');
		form.setAttribute('id', 'form1');
		//form.setAttribute('onSubmit','Save()');
		//form.setAttribute('method', 'POST');
		/*-----------*/
		//var appm = document.createElement('div');
		//appm.appendChild(document.createTextNode('Save This'));
		//appm.setAttribute('class', 'appm');
		/*-----------*/

		var input1 = document.createElement('input');
		input1.setAttribute('type', 'text');
		input1.setAttribute('placeholder', 'InstanceName');
		input1.setAttribute('name', 'inname');
		input1.setAttribute('id', 'iname');


		var input2 = document.createElement('input');
		input2.setAttribute('type', 'text');
		input2.setAttribute('placeholder', 'Keypair');
		input2.setAttribute('name', 'keypair');
		input2.setAttribute('id', 'key1');
		//input2.setAttribute('class', 'address');

		var tags = document.createElement('select');
		//tags.setAttribute('type', 'text');
		//tags.setAttribute('placeholder', 'tags');
		//tags.setAttribute('name', 'routetags');
		tags.setAttribute('id', 'flavourlist');

		var op0=document.createElement('OPTION');
		op0.setAttribute('value','op0');
		op0.setAttribute('label','Select flavour');
		tags.appendChild(op0);

		var op1=document.createElement('OPTION');
		op1.setAttribute('value','m1.nano');
		op1.setAttribute('label','m1.nano');
		tags.appendChild(op1);


		var op2=document.createElement('OPTION');
		op2.setAttribute('value','m1.micro');
		op2.setAttribute('label','m1.micro');
		tags.appendChild(op2);

		var op3=document.createElement('OPTION');
		op3.setAttribute('value','m1.small');
		op3.setAttribute('label','m1.small');
		tags.appendChild(op3);

		var op4=document.createElement('OPTION');
		op4.setAttribute('value','m1.medium');
		op4.setAttribute('label','m1.medium');
		tags.appendChild(op4);

		var images=document.createElement('select');
		images.setAttribute('id','image1');

		var im0=document.createElement('OPTION');
		im0.setAttribute('value','im0');
		im0.setAttribute('label','Select image for VM');
		images.appendChild(im0);


		var im1=document.createElement('OPTION');
		im1.setAttribute('value','Cirros x-86_64');
		im1.setAttribute('label','Cirros x-86_64');
		images.appendChild(im1);

		var im2=document.createElement('OPTION');
		im2.setAttribute('value','Fedora x-86_64');
		im2.setAttribute('label','Fedora x-86_64');
		images.appendChild(im2);

		var submit = document.createElement('input');
		submit.setAttribute('type', 'submit');
		submit.setAttribute("value", "Create Instance");
		submit.setAttribute('id', 'savebutton');
		submit.setAttribute('onclick','Instance.prototype.Save()');
		form.appendChild(input1);
		form.appendChild(input2);
		form.appendChild(tags);
		form.appendChild(images);
		form.appendChild(submit);

		div.appendChild(form);
	
	}
	Instance.prototype.Save=function(){
		instancename=document.getElementById('iname').value;
		keypair=document.getElementById('key1').value;
		flavour=document.getElementById('flavourlist').value;
		type=document.getElementById('image1').value;
		alert('Successfully created instance : '+instancename +' with resources:\nKeypair : ' +keypair+'\nFlavour : '+flavour +"\nImage : "+type);
	}
	</script>
-->



</head>

<body>

<div id="wrapper">

	<div id="frame" >
		<span id="title"><h2>Drag your Network topology here!</h2></span>
	
	</div><!-- end of frame -->
	<div id="properties">
		<b><i> Property Window </i></b>
		<div id="propText">
    	</div>
		<!--
    	<form id="form1">
		Instance name:<input type="text" value="instancename" placeholder="Instance Name">
		<type="Submit" value="Submit">
		</form>-->
		<select id="images">
			<option value="1"><a href="#">Select image..</a></option>
           	<option value="2"><a href="#">fedora</a></option>
           	<option value="3"><a href="#">ubuntu</a></option>
    	</select>
		
	</div>
	
	<div id="options" style="width:1000px;height:500px;border-width:5px; border-style:solid;" >
		<div id="drag1" class="drag wobble-vertical" style="margin-left:15px;
	margin-top:15px;
	background-image: url(db-green.svg);
	background-size: contain;
	width:100px;
	height:100px;"></div> <!-- end of drag1 -->
		<div id="drag2" class="drag wobble-vertical" ></div> <!-- end of drag2 -->
		<div id="drag3" class="drag wobble-vertical" ></div> <!-- end of drag3 -->
		<div id="drag4" class="drag wobble-vertical" ></div> <!-- end of drag4 -->
	</div><!-- end of options -->
	
</div><!-- end of wrapper -->

</body>
</html>

{% endblock %}


